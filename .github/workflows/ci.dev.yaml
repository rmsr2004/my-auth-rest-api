name: Continuous Integration (dev)

on:
  push:
    branches-ignore:
      - main
  pull_request:
    branches-ignore:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U test -d testdb"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: '21'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build (skip tests)
        run: mvn clean package -DskipTests

      - name: Wait for Postgres
        run: |
          for i in {1..20}; do
            pg_isready -h localhost -U test -d testdb
            if [ $? -eq 0 ]; then
              echo "Postgres is ready!"
              break
            fi
            echo "Waiting for Postgres..."
            sleep 3
          done

      - name: Run unit & integration tests
        run: mvn clean verify -Dmaven.compiler.failOnWarning=false
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/testdb
          SPRING_DATASOURCE_USERNAME: test
          SPRING_DATASOURCE_PASSWORD: test
          JWT_SECRET: mysecretkey

  docker-test:
    runs-on: ubuntu-latest
    needs: test
    timeout-minutes: 10
    env:
      POSTGRES_DB: testdb
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/testdb
      JWT_SECRET: testkey
    
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: '21'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build without tests
        run: mvn clean package -DskipTests

      - name: Check docker-compose up
        run: docker compose -f docker-compose.yml up -d --buil

      - name: Waiting for containers
        run: sleep 30

      - name: Check if container is running
        run: docker ps

      - name: Health check
        run: |
          for i in {1..10}; do
            if docker exec -i api curl -f http://localhost:8080/actuator/health; then
              echo "Health check passed!"
              break
            else
              echo "Health check failed, attempt $i/10"
              sleep 10
            fi
            if [ $i -eq 10 ]; then
              echo "Health check failed after 10 attempts"
              docker logs api
              exit 1
            fi
          done

      - name: Cleanup containers
        if: always()
        run: docker compose -f docker-compose.yml down --volumes --remove-orphans
